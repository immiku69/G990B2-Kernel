name: Build ARM64 Kernel

on:
  push:
    branches: [main, master]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ARCH: arm64
      SUBARCH: arm64
      OUTPUT_DIR: ${{ github.workspace }}/out
      TOOLCHAIN_DIR: ${{ github.workspace }}/toolchain/aarch64-linux-android-4.9-toolchain/bin
      CROSS_COMPILE: ${{ github.workspace }}/toolchain/aarch64-linux-android-4.9-toolchain/bin/aarch64-linux-android-

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Setup prerequisites
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential bc bison flex git curl zip unzip cpio python3 python3-pip \
          libncurses5-dev libssl-dev wget libelf-dev fakeroot

    - name: Make toolchain binaries executable
      run: chmod +x $TOOLCHAIN_DIR/*

    - name: Ensure linker symlink
      run: |
        if [ -f "$TOOLCHAIN_DIR/aarch64-linux-android-ld" ]; then
          ln -sf "$TOOLCHAIN_DIR/aarch64-linux-android-ld" "$TOOLCHAIN_DIR/aarch64-linux-android-ld.bfd"
        fi

    - name: Create output directory
      run: mkdir -p $OUTPUT_DIR

    - name: Generate kernel config
      run: |
        make -C ${{ github.workspace }} O=$OUTPUT_DIR \
          ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE \
          vendor/r9q_eur_openx2_defconfig

    - name: Build kernel
      run: |
        DTC_EXT=${{ github.workspace }}/tools/dtc
        make -j$(nproc) -C ${{ github.workspace }} O=$OUTPUT_DIR \
          ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE \
          DTC_EXT=$DTC_EXT CONFIG_BUILD_ARM64_DT_OVERLAY=y

    - name: Upload kernel Image artifact
      uses: actions/upload-artifact@v4
      with:
        name: kernel-image
        path: ${{ env.OUTPUT_DIR }}/arch/arm64/boot/Image

